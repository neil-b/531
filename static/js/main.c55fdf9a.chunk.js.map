{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PRForm","props","useState","validated","setValidated","getURLValue","key","fiveRepMaxesDict","Object","fromEntries","URLSearchParams","window","location","search","hasOwnProperty","Form","noValidate","onSubmit","evt","preventDefault","currentTarget","checkValidity","stopPropagation","submitCallback","press","target","elements","value","bench","squat","deadlift","Row","Group","as","Col","Label","Control","required","name","type","placeholder","defaultValue","style","display","justifyContent","Button","variant","marginLeft","WeekTableColumn","Table","bordered","hover","exerciseName","weekIndex","map","repsAndRatio","targetWeight","wendlerTrainingMax","platesUsed","currentWeight","plate","push","computePlatesForTargetWeight","actualWeight","reduce","a","b","color","toFixed","className","toString","replace","WeekTables","md","trainingMaxes","RoutineCalculator","isTableVisible","setIsTableVisible","setTrainingMaxes","computeWendlerTrainingMax","fiveRepMax","oneRepMax","Math","ceil","setTables","trainingMaxesDict","searchParams","history","replaceState","useEffect","Container","fluid","Array","from","e","i","App","Jumbotron","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c55fdf9a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction PRForm(props) {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (form.checkValidity() === false) {\n      evt.stopPropagation();\n    }\n    else {\n      props.submitCallback({\n        press: evt.target.elements.press.value,\n        bench: evt.target.elements.bench.value,\n        squat: evt.target.elements.squat.value,\n        deadlift: evt.target.elements.deadlift.value\n      });\n    }\n    setValidated(true);\n  }\n\n  function getURLValue(key) {\n    const fiveRepMaxesDict = Object.fromEntries(new URLSearchParams(window.location.search));\n    if (fiveRepMaxesDict.hasOwnProperty(key)) {\n      return fiveRepMaxesDict[key];\n    }\n    else {\n      return null;\n    }\n  }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Form.Label>Press 5 rep max</Form.Label>\n          <Form.Control required name=\"press\" type=\"number\" placeholder=\"135\" defaultValue={getURLValue(\"press\")}/>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Deadlift 5 rep max</Form.Label>\n          <Form.Control required name=\"deadlift\" type=\"number\" placeholder=\"405\" defaultValue={getURLValue(\"deadlift\")}/>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Bench 5 rep max</Form.Label>\n          <Form.Control required name=\"bench\" type=\"number\" placeholder=\"225\" defaultValue={getURLValue(\"bench\")}/>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Squat 5 rep max</Form.Label>\n          <Form.Control required name=\"squat\" type=\"number\" placeholder=\"315\" defaultValue={getURLValue(\"squat\")}/>\n        </Form.Group>\n      </Form.Row>\n\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button variant=\"primary\" type=\"submit\" style={{marginLeft: \"auto\"}}>\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nfunction WeekTableColumn(props) {\n  const barWeight = 45.0;\n  const weightRatiosByWeek = [\n    [\n      [\"5\", 0.4],\n      [\"5\", 0.5],\n      [\"3\", 0.6],\n      [\"5\", 0.65],\n      [\"5\", 0.75],\n      [\"5+\", 0.85],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5]\n    ],\n    [\n      [\"5\", 0.4],\n      [\"5\", 0.5],\n      [\"3\", 0.6],\n      [\"3\", 0.7],\n      [\"3\", 0.8],\n      [\"3+\", 0.9],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5]\n    ],\n    [\n      [\"5\", 0.4],\n      [\"5\", 0.5],\n      [\"3\", 0.6],\n      [\"5\", 0.75],\n      [\"3\", 0.85],\n      [\"1+\", 0.95],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5],\n      [\"10\", 0.5]\n    ],\n    [\n      [\"5\", 0.4],\n      [\"5\", 0.5],\n      [\"5\", 0.6]\n    ],\n  ];\n\n  function computePlatesForTargetWeight(targetWeight) {\n    const availablePlates = [\n      45,\n      45,\n      35,\n      25,\n      10,\n      5,\n      5,\n      2.5,\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n    ];\n    let currentWeight = barWeight;\n    let platesUsed = [];\n    for (const plate of availablePlates) {\n      if (currentWeight + (plate * 2) <= targetWeight) {\n        currentWeight += (plate * 2);\n        platesUsed.push(plate);\n      }\n    }\n    return platesUsed;\n  }\n\n  return (\n    <Table bordered hover>\n      <thead>\n        <tr>\n          <th>{props.exerciseName}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {weightRatiosByWeek[props.weekIndex].map(repsAndRatio => {\n          const targetWeight = props.wendlerTrainingMax * repsAndRatio[1];\n          const platesUsed = computePlatesForTargetWeight(targetWeight);\n          const actualWeight = barWeight + platesUsed.reduce((a, b) => a + b, 0) * 2;\n          return <tr>\n            <td>\n              {repsAndRatio[0] + \" × \" + actualWeight}\n              {actualWeight === targetWeight ? null : <span style={{color: \"#AAAAAA\"}}>{\" (\" + targetWeight.toFixed(2) + \")\"}</span>}\n              {<br/>}\n              {platesUsed.map(plate => {\n                return <span>\n                  <span className={\"plate plate-\" + plate.toString().replace(\".\", \"-\")}>{plate}</span>\n                  &nbsp;\n                </span>;\n              })}\n            </td>\n          </tr>\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction WeekTables(props) {\n  return (\n    <Row className=\"d-flex justify-content-center\">\n      <Col md=\"auto\">\n        <WeekTableColumn exerciseName=\"Press\" wendlerTrainingMax={props.trainingMaxes.press} weekIndex={props.weekIndex}/>\n      </Col>\n      <Col md=\"auto\">\n        <WeekTableColumn exerciseName=\"Deadlift\" wendlerTrainingMax={props.trainingMaxes.deadlift} weekIndex={props.weekIndex}/>\n      </Col>\n      <Col md=\"auto\">\n        <WeekTableColumn exerciseName=\"Bench\" wendlerTrainingMax={props.trainingMaxes.bench} weekIndex={props.weekIndex}/>\n      </Col>\n      <Col md=\"auto\">\n        <WeekTableColumn exerciseName=\"Squat\" wendlerTrainingMax={props.trainingMaxes.squat} weekIndex={props.weekIndex}/>\n      </Col>\n    </Row>\n  );\n}\n\nfunction RoutineCalculator() {\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const [trainingMaxes, setTrainingMaxes] = useState({\n    press: 45,\n    bench: 45,\n    squat: 45,\n    deadlift: 45\n  })\n\n  function computeWendlerTrainingMax(fiveRepMax) {\n    const oneRepMax = fiveRepMax * (1 + 5 * 0.033333333);\n    return Math.ceil((0.9 * oneRepMax) - 0.5);\n  }\n\n  function setTables(fiveRepMaxesDict) {\n    // Compute training maxes\n    let trainingMaxesDict = {}\n    for (const key in fiveRepMaxesDict) {\n      trainingMaxesDict[key] = computeWendlerTrainingMax(fiveRepMaxesDict[key]);\n    }\n\n    setTrainingMaxes(trainingMaxesDict);\n    setIsTableVisible(true);\n\n    // set URL params\n    let searchParams = new URLSearchParams(fiveRepMaxesDict);\n    window.history.replaceState({}, \"\", \"?\" + searchParams.toString());\n  }\n\n  useEffect(() => {\n    // get URL params\n    let fiveRepMaxesDict = Object.fromEntries(new URLSearchParams(window.location.search));\n    if (fiveRepMaxesDict.hasOwnProperty('press') &&\n        fiveRepMaxesDict.hasOwnProperty('bench') &&\n        fiveRepMaxesDict.hasOwnProperty('squat') &&\n        fiveRepMaxesDict.hasOwnProperty('deadlift')) {\n      setTables(fiveRepMaxesDict);\n    }\n  // TODO: fixme\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container fluid>\n      <Container>\n        <PRForm submitCallback={setTables}/>\n      </Container>\n\n      <hr/>\n      {isTableVisible ?\n        <Container fluid>\n          {Array.from(Array(4), (e, i) => {\n            return <div>\n              <h4 className=\"d-flex justify-content-center\">Week {i + 1}</h4>\n              <br/>\n              <WeekTables trainingMaxes={trainingMaxes} weekIndex={i}/>\n              <hr/>\n              <br/>\n            </div>\n          })}\n        </Container>\n      : null}\n    </Container>\n  );\n}\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Container>\n        <Jumbotron>\n          <h1 className=\"header\">\n            5/3/1 Calculator\n          </h1>\n        </Jumbotron>\n      </Container>\n\n      <RoutineCalculator/>\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}